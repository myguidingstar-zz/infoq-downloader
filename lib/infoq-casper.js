 var reduce_q = function (f, val, coll) { return coll.reduce(function (x, y) { return f(x, y); }, val); }; var map = function (f, coll) { return coll.map(function (x) { return f(x); }); }; var filter = function (pred, coll) { return coll.filter(function (x) { return pred(x); }); }; var every_p = function (pred, coll) { return coll.every(function (x) { return pred(x); }); }; var some = function (pred, coll) { var ret = void(0); coll.some(function (p1__5461_h) {  ret = pred(p1__5461_h); return ret; }); return ret; }; var reduce__ = function (f, val, coll) { var c = count(coll); return (function () { for (var i = 0, r = val; true;) { if ((i < c)) { var _temp_1000 = [(i + 1),f(r, coll[i])];
 i = _temp_1000[0]; r = _temp_1000[1]; continue; } else { return r; }; break; } }).call(this); }; var map__ = function (f, arr) { var c = count(arr); return (function () { for (var r = [], i = 0; true;) { if ((i < c)) {  r.push(f(arr[i])); var _temp_1001 = [r,(i + 1)];
 r = _temp_1001[0]; i = _temp_1001[1]; continue; } else { return r; }; break; } }).call(this); }; var filter__ = function (pred, arr) { var c = count(arr); return (function () { for (var r = [], i = 0; true;) { if ((i < c)) {  if (pred(arr[i])) { r.push(arr[i]); }; var _temp_1002 = [r,(i + 1)];
 r = _temp_1002[0]; i = _temp_1002[1]; continue; } else { return r; }; break; } }).call(this); }; var every_p__ = function (pred, coll) { if (empty_p(coll)) { return true; } else { if (pred(coll[0])) { return every_p__(pred, ((1 < count(coll)) ? coll.slice(1) : void(0))); } else { if ('else') { return false; }; }; }; }; var some__ = function (pred, coll) { if (coll) {  return (pred(coll[0]) || some__(pred, ((1 < count(coll)) ? coll.slice(1) : void(0)))); }; }; if (("function" === typeof(Array.prototype.every))) { void(0); } else {  every_p = every_p__; }; if (("function" === typeof(Array.prototype.some))) { void(0); } else {  some = some__; }; if (("function" === typeof(Array.prototype.reduce))) { void(0); } else {  reduce_q = reduce__; }; if (("function" === typeof(Array.prototype.map))) { void(0); } else {  map = map__; }; if (("function" === typeof(Array.prototype.filter))) { void(0); } else {  filter = filter__; }; var not = function (x) { return !x; }; var contains_p = function (m, k) { return (k in m); }; var boolean__ = function (x) { return ((null != x) && (false !== x)); }; var get_q = function (m, k, notFound) { var lookUp = ((("string" === typeof(m)) || (m instanceof String)) ? seq(m) : m); if ((k in lookUp)) { return m[k]; } else { return notFound; }; }; ; var true_p = function (expr) { return (true === expr); }; var false_p = function (expr) { return (false === expr); }; var nil_p = function (expr) { return ((void(0) === expr) || (null === expr)); }; var first = function (x) { if ((void(0) === x)) { return void(0); } else { return x[0]; }; }; var second = function (x) { if ((void(0) === x)) { return void(0); } else { return x[1]; }; }; var last = function (x) { if ((void(0) === x)) { return void(0); } else { return x[(count(x) - 1)]; }; }; var next = function (x) { if (!empty_p(x)) { if ((1 < count(x))) { return x.slice(1); }; }; }; var rest = function (x) { if ((void(0) === x)) { return []; } else { return x.slice(1); }; }; var butlast = function (x) { if (!empty_p(x)) { return x.slice(0, (count(x) - 1)); }; }; var nnext = function (x) { if ((1 < count(((1 < count(x)) ? x.slice(1) : void(0))))) { return ((1 < count(x)) ? x.slice(1) : void(0)).slice(1); }; }; var set_p = function (x) { return (x instanceof Cl2Set); }; var vector_p = function (x) { return (x instanceof Array); }; var string_p = function (x) { return (("string" === typeof(x)) || (x instanceof String)); }; var number_p = function (n) { return ("number" === typeof(n)); }; var zero_p = function (x) { return (0 === x); }; var fn_p = function (f) { return ("function" === typeof(f)); }; var inc = function (arg) { return (1 + arg); }; var dec = function (arg) { return (arg - 1); }; var count = function (x) { if (((x instanceof Array) || (("string" === typeof(x)) || (x instanceof String)))) { return x.length; } else { return keys(x).length; }; }; var empty_p = function (coll) { return ((coll === "") || (void(0) === coll) || _eq__({}, coll) || _eq__([], coll) || _eq__(hashSet(), coll)); }; var reduce = function () { var args5462 = arguments; var f5463 = function (f, val, coll) { return reduce_q(f, val, coll); }; var f5464 = function (f, coll) { return reduce_q(f, coll[0], coll.slice(1)); }; switch (count(args5462)) { case 3: return f5463.apply(0, args5462);  case 2: return f5464.apply(0, args5462);  }; }; var reductions__ = function (f, init, coll) { var c = count(coll), ret = []; (function () { for (var i = 0, r = init; true;) { if ((i < c)) { var _temp_1003 = [(i + 1),f((function(){  ret.push(r); return r;})(), coll[i])];
 i = _temp_1003[0]; r = _temp_1003[1]; continue; } else { return ret.push(r); }; break; } }).call(this); return ret; }; var reductions = function () { var args5465 = arguments; var f5466 = function (f, init, coll) { return reductions__(f, init, coll); }; var f5467 = function (f, coll) { return reductions__(f, coll[0], coll.slice(1)); }; switch (count(args5465)) { case 3: return f5466.apply(0, args5465);  case 2: return f5467.apply(0, args5465);  }; }; var __gensym__ = 999; var gensym = function (prefixString) { __gensym__ = (1 + __gensym__); return str((prefixString || "G__"), __gensym__); }; var subvec = function (v, start, end) { return v.slice(start, end); }; var map_p = function (m) { return (m && ("object" === typeof(m)) && !((m instanceof Array) || (null === m) || (m instanceof RegExp) || (m instanceof String) || (m instanceof Cl2Set))); }; var type = function (x) { if ((x instanceof Array)) { return 'vector'; } else { if ((x instanceof Cl2Set)) { return 'set'; } else { if ((("string" === typeof(x)) || (x instanceof String))) { return 'string'; } else { if (("number" === typeof(x))) { return 'number'; } else { if ((void(0) === x)) { return "nil"; } else { if ((null === x)) { return 'null'; } else { if (("boolean" === typeof(x))) { return 'boolean__'; } else { if (("function" === typeof(x))) { return 'function'; } else { if ((x instanceof RegExp)) { return 'regexp'; } else { if ('else') { return 'map'; }; }; }; }; }; }; }; }; }; }; }; var remove = function (pred, seq) { var c = count(seq); return (function () { for (var r = [], i = 0; true;) { if ((i < c)) {  if (pred(seq[i])) { void(0); } else {  r.push(seq[i]); }; var _temp_1004 = [r,(1 + i)];
 r = _temp_1004[0]; i = _temp_1004[1]; continue; } else { return r; }; break; } }).call(this); }; var merge = function () { var _temp_1005 = Array.prototype.slice.call(arguments), ms = _temp_1005.slice(0); return ((function () { var ret = {}; (function () { var coll5468 = ms; for (var k5469 in coll5468) { var m = coll5468[k5469]; (function () { var coll5470 = m; for (var k in coll5470) { var v = coll5470[k]; ret[k] = v; }; })(); }; })(); return ret;  })() || {}); }; var selectKeys = function (m, ks) { var m1 = {}; (function () { var coll5471 = ks; for (var k5472 in coll5471) { var k = coll5471[k5472]; if (m.hasOwnProperty(k)) { m1[k] = m[k]; }; }; })(); return m1; }; var keys = function (m) { var ret5473 = []; var coll5474 = m; for (var k in coll5474) { var v = coll5474[k]; ret5473.push(k); }; return ret5473;; }; var vals = function (m) { var ret5475 = []; var coll5476 = m; for (var k in coll5476) { var v = coll5476[k]; ret5475.push(v); }; return ret5475;; }; var v_eq__ = function (x, y) { if ((count(x) === count(y))) { for (var a = x, b = y, c = count(x); true;) { if ((0 === c)) { return true; } else { if (_eq__(a[0], b[0])) { var _temp_1006 = [a.slice(1),b.slice(1),(c - 1)];
 a = _temp_1006[0]; b = _temp_1006[1]; c = _temp_1006[2]; continue; } else { return false; }; }; break; }; } else { return false; }; }; var m_eq__ = function (x, y) { var xkeys = keys(x).sort(); if (_eq__(xkeys, keys(y).sort())) { return (function () { for (var ks = xkeys, c = count(xkeys); true;) { if (_eq__(x[ks[0]], y[ks[0]])) { if ((0 === c)) { return true; } else { var _temp_1007 = [ks.slice(1),(c - 1)];
 ks = _temp_1007[0]; c = _temp_1007[1]; continue; }; } else { return false; }; break; } }).call(this); } else { return false; }; }; var _eq__ = function (x, y) { if ((x === y)) { return true; } else { if ((type(x) === type(y))) { if ((x instanceof Array)) { return v_eq__(x, y); } else { if ((map_p(x) || (x instanceof Cl2Set))) { return m_eq__(x, y); } else { if ('else') { return false; }; }; }; } else { return false; }; }; }; var _eq____ = function () { var _temp_1008 = Array.prototype.slice.call(arguments), x = _temp_1008[0], xs = _temp_1008.slice(1); for (var a = x, more = xs; true;) { if ((x === a)) { if (((1 < count(more)) ? more.slice(1) : void(0))) { var _temp_1009 = [more[0],((1 < count(more)) ? more.slice(1) : void(0))];
 a = _temp_1009[0]; more = _temp_1009[1]; continue; } else { return (x === more[0]); }; } else { return false; }; break; }; }; var _eq_q = function () { var args5477 = arguments; var f5478 = function () { return true; }; var f5479 = function (x) { return true; }; var f5480 = function (x, y) { return _eq__(x, y); }; var f5481 = function () { var _temp_1010 = Array.prototype.slice.call(arguments), a = _temp_1010[0], b = _temp_1010[1], c = _temp_1010.slice(2); for (var x = a, y = b, more = c; true;) { if (_eq__(x, y)) { if (((1 < count(more)) ? more.slice(1) : void(0))) { var _temp_1011 = [y,more[0],((1 < count(more)) ? more.slice(1) : void(0))];
 x = _temp_1011[0]; y = _temp_1011[1]; more = _temp_1011[2]; continue; } else { return _eq__(y, more[0]); }; } else { return false; }; break; }; }; switch (count(args5477)) { case 0: return f5478.apply(0, args5477);  case 1: return f5479.apply(0, args5477);  case 2: return f5480.apply(0, args5477);  default: return f5481.apply(0, args5477); }; }; var _eq = _eq_q; var not_eq = function () { var args5482 = arguments; var f5483 = function (x) { return false; }; var f5484 = function (x, y) { return !_eq__(x, y); }; var f5485 = function () { var _temp_1012 = Array.prototype.slice.call(arguments), args = _temp_1012.slice(0); return !_eq.apply(0, args); }; switch (count(args5482)) { case 1: return f5483.apply(0, args5482);  case 2: return f5484.apply(0, args5482);  default: return f5485.apply(0, args5482); }; }; var _plus = function () { var _temp_1013 = Array.prototype.slice.call(arguments), args = _temp_1013.slice(0); return reduce_q(function (p1__5486_h, p2__5487_h) { return (p1__5486_h + p2__5487_h); }, 0, args); }; var _ = function () { var _temp_1014 = Array.prototype.slice.call(arguments), args = _temp_1014.slice(0); return reduce_q(function (p1__5488_h, p2__5489_h) { return (p1__5488_h - p2__5489_h); }, 0, args); }; var __ = function () { var _temp_1015 = Array.prototype.slice.call(arguments), args = _temp_1015.slice(0); return reduce_q(function (p1__5490_h, p2__5491_h) { return (p1__5490_h * p2__5491_h); }, 1, args); }; var _divide = function () { var _temp_1016 = Array.prototype.slice.call(arguments), args = _temp_1016.slice(0); return reduce_q(function (p1__5492_h, p2__5493_h) { return (p1__5492_h / p2__5493_h); }, 1, args); }; var identity = function (x) { return x; }; var reverse = function (x) { return x.slice(0).reverse(); }; var compare = function (x, y) { if ((x === y)) { return 0; } else { if ((x > y)) { return 1; } else { if ((x < y)) { return -1; }; }; }; }; var int__ = function (x) { if (("number" === typeof(x))) { return (x | 0); }; }; var max = Math.max; var min = Math.min; var pos_p = function (x) { return (("number" === typeof(x)) && (x > 0)); }; var neg_p = function (x) { return (("number" === typeof(x)) && (x < 0)); }; var integer_p = function (n) { return (n === int__(n)); }; var even_p = function (n) { return (0 === (n % 2)); }; var odd_p = function (n) { return (1 === (n % 2)); }; var rand = function () { var args5494 = arguments; var f5495 = function () { return Math.random(); }; var f5496 = function (n) { return (n * Math.random()); }; switch (count(args5494)) { case 0: return f5495.apply(0, args5494);  case 1: return f5496.apply(0, args5494);  }; }; var quot = function (x, y) { return int__((x / y)); }; var complement = function (f) { return function () { var _temp_1017 = Array.prototype.slice.call(arguments), args = _temp_1017.slice(0); return !f.apply(0, args); }; }; var constantly = function (x) { return function () { return x; }; }; var conj = function () { var _temp_1018 = Array.prototype.slice.call(arguments), coll = _temp_1018[0], xs = _temp_1018.slice(1); if (empty_p(coll)) { return xs; } else { return coll.concat(xs); }; }; var cons = function (x, coll) { return [x].concat(coll); }; var assoc = function () { var _temp_1019 = Array.prototype.slice.call(arguments), m = _temp_1019[0], kvs = _temp_1019.slice(1); var ret = ((m instanceof Array) ? m.slice(0) : merge(m, {})); return (function () { for (var kvTail = kvs; true;) { if (kvTail) {  var _temp_1020 = kvTail, k = _temp_1020[0], v = _temp_1020[1]; ret[k] = v; var _temp_1021 = [((1 < count(((1 < count(kvTail)) ? kvTail.slice(1) : void(0)))) ? ((1 < count(kvTail)) ? kvTail.slice(1) : void(0)).slice(1) : void(0))];
 kvTail = _temp_1021[0]; continue; } else { return ret; }; break; } }).call(this); }; var dissoc = function () { var _temp_1022 = Array.prototype.slice.call(arguments), m = _temp_1022[0], ks = _temp_1022.slice(1); var ret = merge(m, {}); (function () { var coll5497 = ks; for (var k5498 in coll5497) { var k = coll5497[k5498]; delete ret[k]; }; })(); return ret; }; var find = function (m, k) { if ((k in m)) { return [k,m[k]]; }; }; var concat = function () { var _temp_1023 = Array.prototype.slice.call(arguments), xs = _temp_1023.slice(0); for (var ret = [], xsTail = xs; true;) { if (xsTail) { var _temp_1024 = [ret.concat(xsTail[0]),((1 < count(xsTail)) ? xsTail.slice(1) : void(0))];
 ret = _temp_1024[0]; xsTail = _temp_1024[1]; continue; } else { return ret; }; break; }; }; var mapcat = function (f, coll) { return concat.apply(0, map(f, coll)); }; var drop = function (n, coll) { if (pos_p(n)) {  var temp__4126__auto__ = coll; if (temp__4126__auto__) {  return (function () { var s = temp__4126__auto__; return s.slice(n);  })(); };; }; }; var take = function (n, coll) { if (pos_p(n)) {  var temp__4126__auto__ = coll; if (temp__4126__auto__) {  return (function () { var s = temp__4126__auto__; return s.slice(0, n);  })(); };; }; }; var Cl2Set = function (coll) { var that = this; return (function () { var coll5499 = coll; for (var k5500 in coll5499) { var k = coll5499[k5500]; that[k] = true; }; })(); }; var hashSet = function () { var _temp_1025 = Array.prototype.slice.call(arguments), ks = _temp_1025.slice(0); return new Cl2Set(ks); }; var set = function (coll) { return new Cl2Set(coll); }; var sort = function () { var args5501 = arguments; var f5502 = function (coll) { return Array.prototype.slice.call(coll, 0).sort(); }; var f5503 = function (comp, x) { return Array.prototype.slice.call(x, 0).sort(comp); }; switch (count(args5501)) { case 1: return f5502.apply(0, args5501);  case 2: return f5503.apply(0, args5501);  }; }; var takeWhile = function (pred, coll) { var temp__4126__auto__ = coll; if (temp__4126__auto__) {  return (function () { var s = temp__4126__auto__; if (pred(s[0])) {  return conj(takeWhile(pred, s.slice(1)), s[0]); };  })(); };; }; var dropLast = function (n, coll) { return coll.slice(0, (coll.length - n)); }; var takeLast = function (n, coll) { return coll.slice((coll.length - n)); }; var dropWhile = function (pred, coll) { var step = function (pred, coll) { var s = coll; if ((s && pred(s[0]))) { return step(pred, s.slice(1)); } else { return s; }; }; return step(pred, coll); }; var cycle = function (coll, n) { for (var ret = [], n = n; true;) { if (zero_p(n)) { return ret; } else { var _temp_1026 = [ret.concat(coll),(n - 1)];
 ret = _temp_1026[0]; n = _temp_1026[1]; continue; }; break; }; }; var splitAt = function (n, coll) { return [take(n, coll),drop(n, coll)]; }; var repeat = function (n, x) { for (var ret = [], n = n; true;) { if (zero_p(n)) { return ret; } else { var _temp_1027 = [conj(ret, x),(n - 1)];
 ret = _temp_1027[0]; n = _temp_1027[1]; continue; }; break; }; }; var iterate = function (f, x, n) { var ret = []; return cons(x, (function () { for (var v = x, i = (n - 1); true;) { if (zero_p(i)) { return ret; } else { var _temp_1028 = [(function () { var val = f(v); ret.push(val); return val;  })(),(i - 1)];
 v = _temp_1028[0]; i = _temp_1028[1]; continue; }; break; } }).call(this)); }; var splitWith = function (pred, coll) { return [takeWhile(pred, coll),dropWhile(pred, coll)]; }; var zipmap = function (keys, vals) { var map = {}; return (function () { for (var ks = keys, vs = vals; true;) { if ((ks && vs)) {  map[ks[0]] = vs[0]; var _temp_1029 = [((1 < count(ks)) ? ks.slice(1) : void(0)),((1 < count(vs)) ? vs.slice(1) : void(0))];
 ks = _temp_1029[0]; vs = _temp_1029[1]; continue; } else { return map; }; break; } }).call(this); }; var nthnext = function (coll, n) { for (var n = n, xs = coll; true;) { if ((xs && pos_p(n))) { var _temp_1030 = [(n - 1),((1 < count(xs)) ? xs.slice(1) : void(0))];
 n = _temp_1030[0]; xs = _temp_1030[1]; continue; } else { return xs; }; break; }; }; var nthrest = function (coll, n) { for (var n = n, xs = coll; true;) { if ((xs && pos_p(n))) { var _temp_1031 = [(n - 1),xs.slice(1)];
 n = _temp_1031[0]; xs = _temp_1031[1]; continue; } else { return xs; }; break; }; }; var randInt = function (n) { return int__(rand(n)); }; var randNth = function (coll) { return coll[randInt(count(coll))]; }; var range__ = function (start, end, step) { var ret = [], comp = (pos_p(step) ? function (p1__5504_h, p2__5505_h) { return (p1__5504_h < p2__5505_h); } : function (p1__5506_h, p2__5507_h) { return (p1__5506_h > p2__5507_h); }); return (function () { for (var i = start; true;) { if (comp(i, end)) {  ret.push(i); var _temp_1032 = [(i + step)];
 i = _temp_1032[0]; continue; } else { if (comp(i, end)) { return cons(ret, range__(i, end, step)); } else { return ret; }; }; break; } }).call(this); }; var range = function () { var args5508 = arguments; var f5509 = function (end) { return range__(0, end, 1); }; var f5510 = function (start, end) { return range__(start, end, 1); }; var f5511 = function (start, end, step) { return range__(start, end, step); }; switch (count(args5508)) { case 1: return f5509.apply(0, args5508);  case 2: return f5510.apply(0, args5508);  case 3: return f5511.apply(0, args5508);  }; }; var partition3 = function (n, step, coll) { var temp__4126__auto__ = coll; if (temp__4126__auto__) {  return (function () { var s = temp__4126__auto__; return (function () { var temp__4126__auto__ = take(n, s); if (temp__4126__auto__) {  return (function () { var p = temp__4126__auto__; if (_eq__(n, count(p))) { return cons(p, partition3(n, step, nthrest(s, step))); } else { return []; };  })(); };  })();  })(); };; }; var partition4 = function (n, step, pad, coll) { var pad = ((void(0) === pad) ? [] : pad); return (function () { var temp__4126__auto__ = coll; if (temp__4126__auto__) {  return (function () { var s = temp__4126__auto__; return (function () { var temp__4126__auto__ = take(n, s); if (temp__4126__auto__) {  return (function () { var p = temp__4126__auto__; if (_eq__(n, count(p))) { return cons(p, partition4(n, step, pad, nthrest(s, step))); } else { return [take(n, concat(p, pad))]; };  })(); };  })();  })(); };  })(); }; var partition = function () { var args5512 = arguments; var f5513 = function (n, coll) { return partition3(n, n, coll); }; var f5514 = function (n, step, coll) { return partition3(n, step, coll); }; var f5515 = function (n, step, pad, coll) { return partition4(n, step, pad, coll); }; switch (count(args5512)) { case 2: return f5513.apply(0, args5512);  case 3: return f5514.apply(0, args5512);  case 4: return f5515.apply(0, args5512);  }; }; ; var println = (("object" === typeof(console)) ? console.log : function () { }); var seq = function (x) { if (empty_p(x)) { return void(0); } else { if ((x instanceof Array)) { return x; } else { if ((("string" === typeof(x)) || (x instanceof String))) { return x.split(""); } else { if ((x instanceof Cl2Set)) { return keys(x); } else { if ('else') { var ret5516 = []; var coll5517 = x; for (var k in coll5517) { var v = coll5517[k]; ret5516.push([k,v]); }; return ret5516;; }; }; }; }; }; }; var interleave = function () { var _temp_1033 = Array.prototype.slice.call(arguments), colls = _temp_1033.slice(0); var maxIndex = min.apply(0, map(count, colls)); return concat.apply(0, (function () { var ret5519 = []; var coll5520 = range(0, maxIndex); for (var k5521 in coll5520) { var index = coll5520[k5521]; ret5519.push(map(function (p1__5518_h) { return p1__5518_h[index]; }, colls)); }; return ret5519;  })()); }; var interpose = function (sep, coll) { var c = seq(coll); return drop(1, interleave(repeat(count(c), sep), c)); }; var assocIn = function () { var _temp_1034 = Array.prototype.slice.call(arguments), m = _temp_1034[0], _temp_1035 = _temp_1034[1], k = _temp_1035[0], ks = _temp_1035.slice(1), v = _temp_1034[2]; if (count(ks)) { return assoc(m, k, assocIn(get_q(m, k, {}), ks, v)); } else { return assoc(m, k, v); }; }; var updateIn = function () { var _temp_1036 = Array.prototype.slice.call(arguments), m = _temp_1036[0], _temp_1037 = _temp_1036[1], k = _temp_1037[0], ks = _temp_1037.slice(1), f = _temp_1036[2], args = _temp_1036.slice(3); if (count(ks)) { return assoc(m, k, updateIn.apply(0, [get_q(m, k, {}),ks,f].concat(args))); } else { return assoc(m, k, f.apply(0, [get_q(m, k, {})].concat(args))); }; }; var trampoline = function () { var args5522 = arguments; var f5523 = function (f) { for (var ret = f(); true;) { if (("function" === typeof(ret))) { var _temp_1038 = [ret()];
 ret = _temp_1038[0]; continue; } else { return ret; }; break; }; }; var f5524 = function () { var _temp_1039 = Array.prototype.slice.call(arguments), f = _temp_1039[0], args = _temp_1039.slice(1); return trampoline(function () { return f.apply(0, args); }); }; switch (count(args5522)) { case 1: return f5523.apply(0, args5522);  default: return f5524.apply(0, args5522); }; }; var Cl2Atom = function (x, validator) { var that = this; that.deref = x; if (("function" === typeof(validator))) {  that.validator = validator; }; that.watchers = {}; }; var deref = function (x) { return x.deref; }; var swap_s__ = function (x, func) { var oldVal = x.deref, newVal = func(oldVal), valid_p = (x.validator ? (x.validator)(newVal) : true); if (valid_p) {  x.deref = newVal; (function () { var coll5534 = x.watchers; for (var watcherName in coll5534) { var watcher = coll5534[watcherName]; watcher(watcherName, x, oldVal, newVal); }; })(); return x.deref; } else { throw "Invalid reference state"; }; }; var reset_s = function (x, newVal) { var oldVal = x.deref, valid_p = (x.validator ? (x.validator)(newVal) : true); if (valid_p) {  x.deref = newVal; (function () { var coll5541 = x.watchers; for (var watcherName in coll5541) { var watcher = coll5541[watcherName]; watcher(watcherName, x, oldVal, newVal); }; })(); return x.deref; } else { throw "Invalid reference state"; }; }; var addWatch = function (x, watcherName, func) { x.watchers[watcherName] = func; }; var removeWatch = function (x, watcherName) { return delete x.watchers[watcherName]; }; var serialize = function (data) { return JSON.stringify(data); }; var deserialize = function (s) { try { return JSON.parse(s); } catch (e) { return void(0); }; };  var str__ = function () { var _temp_1040 = Array.prototype.slice.call(arguments), args = _temp_1040.slice(0); var dispatchFn__5241__auto__ = type, dispatchedVal__5242__auto__ = dispatchFn__5241__auto__.apply(0, args); if ((dispatchedVal__5242__auto__ in str__.methods)) { return (function () { var dispatcher__5243__auto__ = str__.methods[dispatchedVal__5242__auto__]; return dispatcher__5243__auto__.apply(0, args);  })(); } else { if (("function" === typeof(str__.defaultMethod))) { return (function () { var defaultMethod__5244__auto__ = str__.defaultMethod; return defaultMethod__5244__auto__.apply(0, args);  })(); } else { throw str("No method in multimethod '", "str*", "' for dispatch value: ", dispatchedVal__5242__auto__); }; };; }; str__.methods = {};; str__.methods["vector"] = function (a) { return ("[" + map(str__, a).join(", ") + "]"); }; str__.methods["set"] = function (a) { return ("#{" + map(str__, keys(a)).join(", ") + "}"); }; str__.methods["nil"] = function (x) { return ""; }; str__.methods["function"] = function (x) { return ("" + x); }; str__.methods["map"] = function (m) { return ("{" + map(function (k) { return ("\"" + k + "\" " + str__(m[k])); }, keys(m)).join(", ") + "}"); }; str__.methods["regexp"] = function (x) { return ("#\"" + x + "\""); }; str__.defaultMethod = function (x) { return ("" + x); }; function str () { var _temp_1041 = Array.prototype.slice.call(arguments), args = _temp_1041.slice(0); return map(str__, args).join(""); };  var prStr__ = function () { var _temp_1042 = Array.prototype.slice.call(arguments), args = _temp_1042.slice(0); var dispatchFn__5241__auto__ = type, dispatchedVal__5242__auto__ = dispatchFn__5241__auto__.apply(0, args); if ((dispatchedVal__5242__auto__ in prStr__.methods)) { return (function () { var dispatcher__5243__auto__ = prStr__.methods[dispatchedVal__5242__auto__]; return dispatcher__5243__auto__.apply(0, args);  })(); } else { if (("function" === typeof(prStr__.defaultMethod))) { return (function () { var defaultMethod__5244__auto__ = prStr__.defaultMethod; return defaultMethod__5244__auto__.apply(0, args);  })(); } else { throw str("No method in multimethod '", "pr-str*", "' for dispatch value: ", dispatchedVal__5242__auto__); }; };; }; prStr__.methods = {};; prStr__.methods["string"] = function (x) { return ("\"" + x.replace(/\/\\\/g/, "\\\\").replace(/\/\t\/g/, "\\t").replace(/\/\v\/g/, "\\v").replace(/\/\f\/g/, "\\f").replace(/\/\n\/g/, "\\n").replace(/\/\r\/g/, "\\r").replace(/\/\"\/g/, "\"").replace(/\/\'\/g/, "\\'") + "\""); }; prStr__.methods["vector"] = function (a) { return ("[" + map(prStr__, a).join(" ") + "]"); }; prStr__.methods["set"] = function (a) { return ("#{" + map(prStr__, keys(a)).join(" ") + "}"); }; prStr__.methods["nil"] = function (x) { return "nil"; }; prStr__.methods["function"] = function (x) { return ("(inline " + prStr__(("" + x)) + ")"); }; prStr__.methods["map"] = function (m) { return ("{" + map(function (k) { return ("\"" + k + "\" " + prStr__(m[k])); }, keys(m)).join(", ") + "}"); }; prStr__.methods["regexp"] = function (x) { return ("#\"" + x + "\""); }; prStr__.defaultMethod = function (x) { return ("" + x); }; function prStr () { var _temp_1043 = Array.prototype.slice.call(arguments), args = _temp_1043.slice(0); return map(prStr__, args).join(" "); }; var ok__ = function (expr, msg) { if (!expr) { throw new Error(msg); }; }; if (("undefined" === typeof(ok))) {  ok = ok__; }; var equal = function (actual, expected, message) { if (("object" === typeof(QUnit))) { return QUnit.push(_eq__(expected, actual), actual, expected, message); } else { return ok(_eq__(actual, expected), ("" + (message || "") + "(Expected: " + prStr(expected) + ", Actual: " + prStr(actual) + ")")); }; }; var equal_eq_eq = function (actual, expected, message) { if (("object" === typeof(QUnit))) { return QUnit.push(_eq__(expected, actual), actual, expected, message); } else { return ok(_eq__(actual, expected), ("" + (message || "") + "(Expected: " + prStr(expected) + ", Actual: " + prStr(actual) + ")")); }; }; var equal_eq_eq_eq = function (actual, expected, message) { if (("object" === typeof(QUnit))) { return QUnit.push(_eq__(expected, actual), actual, expected, message); } else { return ok(_eq__(actual, expected), ("" + (message || "") + "(Expected: " + prStr(expected) + ", Actual: " + prStr(actual) + ")")); }; };

 var iPadUserAgent = str("Mozilla/5.0 (iPad; U; CPU OS 4_2_1 like Mac OS X; en-us) ", "AppleWebKit/533.17.9 (KHTML, like Gecko) ", "Version/5.0.2 ", "Mobile/8C148 ", "Safari/6533.18.5"); var iPhoneUserAgent = str("Mozilla/5.0 (iPhone; U; CPU iPhone OS 4_2_1 like Mac OS X; da-dk) ", "AppleWebKit/533.17.9 (KHTML, like Gecko) ", "Version/5.0.2 ", "Mobile/8C148 ", "Safari/6533.18.5"); var casperConfig = {clientScripts : [],pageSettings : {loadImages : false,loadPlugins : false,userAgent : iPhoneUserAgent}}; var fs = require("fs"); var spit = function (file, content) { return fs.write(file, content, 'w'); }; var slurp = function (file) { return fs.read(file); }; var startsWith = function (s, prefix) { return (0 === s.indexOf(prefix)); }; var ToAbsUrl = function (url) { if ((startsWith(url, "http://") || startsWith(url, "https://"))) { return url; } else { if (startsWith(url, "//")) { return str("http:", url); } else { if ('default') { return str("http://www.infoq.com", url); }; }; }; }; var getContents = function () { return [(document.title || ""),slides,times,(document.querySelector("video > source").getAttribute("src") || "")]; }; var casper = require("casper").create(casperConfig); var url = casper.cli.args[0]; if (!url) {  casper.echo("Error: No URL specified", 'WARNING'); casper.echo("Usage:", 'COMMENT'); casper.echo(str("casper infoq-casper.js", " http://www.infoq.com/presentations/a-presentation-name"), 'PARAMETER'); casper.exit(1); } else { console.log(str("Opening: ", url)); }; var paramsToPresentz = function (title, localSlideUrls, times, localVideoUrl) { var slides = (function () { var ret5923 = []; var coll5924 = times; for (var i in coll5924) { var t = coll5924[i]; ret5923.push({url : localSlideUrls[i],time : t}); }; return ret5923;  })(); return {title : title,chapters : [{title : title,video : {url : localVideoUrl},slides : slides}]}; }; var prepare = function (title) { if (fs.exists(title)) { return console.log(str("Directory for presentation ", title, " exists. Nothing to prepare.")); } else {  console.log(str("Preparing a directory for presentation ", title)); fs.makeDirectory(title); fs.makeDirectory(str(title, "/slides")); return fs.copyTree("assets", str(title, "/assets")); }; }; var mergeData = function (content, data) { return content.replace("{{presentation-data}}", data); }; var mergeTitle = function (title, content) { return content.replace("{{title}}", title); }; var urlToName = function (url) { return last(url.split("/")); }; var urlToFileExtension = function (url) { return last(url.split(".")); }; var changeExtension = function (fileName, oldExtension, newExtension) { var position = fileName.lastIndexOf(str(".", oldExtension)); if ((-1 === position)) { return fileName; } else { return str(fileName.substr(0, position), ".", newExtension); }; }; var slideToLocal = function (slideUrl) { return str("slides/", urlToName(changeExtension(slideUrl, "swf", "png"))); }; var videoToAria2Lines = function (videoUrl, title) { return str(ToAbsUrl(videoUrl), "\n  dir=", title); }; var slideToAria2Lines = function (slideUrl, title) { console.log(ToAbsUrl(slideUrl)); return str(ToAbsUrl(slideUrl), "\n  dir=", title, "/slides"); }; var generateAria2 = function (title, slideUrls, videoUrl) { console.log("Generating aria2.txt..."); return (function (p1__5925_h) { return spit(str(title, "/aria2.txt"), p1__5925_h); })(conj((function () { var ret5926 = []; var coll5927 = slideUrls; for (var i in coll5927) { var slide = coll5927[i]; var id = (1 + i); ret5926.push(slideToAria2Lines(slide, title)); }; return ret5926;  })(), videoToAria2Lines(videoUrl, title)).join("\n")); }; var generateHtml = function (title, slideUrls, videoUrl, times, pageTitle) { console.log(str("Generating HTML file...")); return spit(str(title, "/index.html"), mergeTitle(pageTitle, mergeData(slurp("template.html"), JSON.stringify(paramsToPresentz(title, map(function (p1__5928_h) { return slideToLocal(p1__5928_h); }, slideUrls), times, urlToName(changeExtension(videoUrl, "flv", "webm"))))))); }; casper.start(url, function () { var _temp_1000 = this.evaluate(getContents), pageTitle = _temp_1000[0], slideUrls = _temp_1000[1], times = _temp_1000[2], videoUrl = _temp_1000[3], title = urlToName(url), pageTitle = (pageTitle || title), videoUrl = (videoUrl || "unknown.video.url"); console.log(str("Entering ", title, "...")); if ((videoUrl === "unknown.video.url")) {  casper.echo("Unknown video url. You need to figure it out yourself"); }; prepare(title); generateAria2(title, slideUrls, videoUrl); generateHtml(title, slideUrls, videoUrl, times, pageTitle); casper.echo("You can now run aria2c to download slides and video with:", 'INFO'); casper.echo("(download resume is enabled)", 'COMMENT'); return casper.echo(str("aria2c -x 16 --auto-file-renaming=false -i ", title, "/aria2.txt"), 'PARAMETER'); }); casper.run();